// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id              Int             @id @default(autoincrement())
  name            String?         @default("Handsome User")
  email           String          @unique
  password        String
  role            Role            @default(USER)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  listenHistories ListenHistory[]

  @@map("users")
}

model Artist {
  id         Int      @id @default(autoincrement())
  artistId   String?  @unique
  name       String   @unique
  uri        String?  @unique
  popularity Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  tracks     Track[]
  images     Image[]

  @@map("artists")
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  width     Int
  height    Int
  artistId  String?
  artist    Artist?  @relation(fields: [artistId], references: [artistId])
  track     Track?   @relation(fields: [songId], references: [id])
  songId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("images")
}

model Track {
  id              Int             @id @default(autoincrement())
  name            String
  uri             String          @unique
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  duration_ms     Int?
  artistId        String
  artist          Artist          @relation(fields: [artistId], references: [artistId])
  listenHistories ListenHistory[]
  images          Image[]

  @@map("tracks")
}

model ListenHistory {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  song       Track    @relation(fields: [songId], references: [id])
  songId     Int
  duration   Int
  listenedAt DateTime @default(now())

  @@unique([userId, songId, listenedAt])
  @@map("listen_histories")
}

enum Role {
  USER
  ADMIN
  DEVELOPER
}
